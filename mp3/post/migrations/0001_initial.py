# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-08-07 02:05
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import post.validators
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='ItemOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='MoneyOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_name', models.CharField(max_length=30)),
                ('post_description', models.TextField()),
                ('post_price', models.PositiveIntegerField(default=0)),
                ('post_posted', models.DateTimeField(auto_now=True)),
                ('post_type', models.CharField(choices=[('academic', 'Academic Use'), ('office', 'Office Use')], default='academic', max_length=20, validators=[post.validators.valid_post_type])),
                ('post_pic', models.ImageField(default='/media/img/default.png', upload_to='media/img/posts/')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50)),
                ('user_email', models.EmailField(max_length=254)),
                ('user_password', models.CharField(max_length=16)),
                ('user_type', models.CharField(choices=[('student', 'Student Account'), ('professor', 'Professor Account')], default='student', max_length=20, validators=[post.validators.valid_user_type])),
                ('user_pic', models.ImageField(default='/media/img/default.png', upload_to='media/img/user/')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='post_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post.User'),
        ),
        migrations.AddField(
            model_name='post',
            name='post_tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='offer',
            name='offer_post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post.Post'),
        ),
        migrations.AddField(
            model_name='offer',
            name='offer_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post.User'),
        ),
        migrations.AddField(
            model_name='moneyoffer',
            name='moneyO_offer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='post.Offer'),
        ),
        migrations.AddField(
            model_name='itemoffer',
            name='item',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='post.Post'),
        ),
        migrations.AddField(
            model_name='itemoffer',
            name='itemO_offer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='post.Offer'),
        ),
    ]
